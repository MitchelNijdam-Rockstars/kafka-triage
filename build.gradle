buildscript {
    ext {
        kotlinVersion = '1.2.61'
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'

apply plugin: 'idea'

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'org.kafkatriage'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}


dependencies {
    ext {
        kafkaVersion = '2.0.0'
        springKafkaVersion = '2.1.9.RELEASE'

        mockitoKotlinVersion = '1.6.0'
        jUnitVersion = '5.2.0'
    }

    compile('com.fasterxml.jackson.module:jackson-module-kotlin')

    compile("org.apache.kafka:kafka-clients:${kafkaVersion}")

    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
//    compile("org.springframework.kafka:spring-kafka:${springKafkaVersion}")

    // Test
    testCompile("com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${jUnitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${jUnitVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}

test {
    useJUnitPlatform()
}